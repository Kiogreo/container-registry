# SUMMARY:
# Build, push, and sign Docker images to GHCR when production branch or version tags are pushed

name: Publish Production Image

on:
  push:
    branches:
      - production
    tags:
      - v*

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    if: github.event.base_ref == 'refs/heads/production'
    runs-on: ubuntu-latest
    environment: production
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Set up Docker Buildx # Set up BuildKit for multi-architecture image build (https://github.com/docker/setup-buildx-action)
        uses: docker/setup-buildx-action@v3.11.1
      - name: Login to Github Container Registry # (https://github.com/docker/login-action)
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - id: extract-metadata
        name: Extract Metadata # (https://github.com/docker/metadata-action)
        uses: docker/metadata-action@v5.8.0
        with:
          images: "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}"
          tags: |
            type=ref,event=tag
            type=raw,value=latest
      - id: build-and-push
        name: Build and Push Docker Image # (https://github.com/docker/build-push-action)
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          labels: ${{ steps.extract-metadata.outputs.labels }}
          tags: ${{ steps.extract-metadata.outputs.tags }}
      - name: Sign Image Artifact # Generate artifact attestation (https://docs.github.com/en/actions/concepts/security/artifact-attestations)
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          subject-digest: ${{ steps.build-and-push.outputs.digest }}
          push-to-registry: true

  release:
    needs: build
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Create GitHub Release
        run: gh release create ${{ github.ref_name }} --generate-notes --latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
